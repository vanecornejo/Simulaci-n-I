{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO7M04bFY+K88j28iRv1p50",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vanecornejo/Simulaci-n-I/blob/main/N%C3%BAmeros%20aleatorios\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import tabulate\n",
        "a = 35;\n",
        "c = 2;\n",
        "m = 22;\n",
        "xi = 3;\n",
        "\n",
        "def generador(a,c,m,xi):\n",
        "      x = (a*xi + c)%m\n",
        "      return x\n",
        "\n",
        "muestra = []\n",
        "datos = []\n",
        "\n",
        "for i in range(50):\n",
        "  nuevo = generador(a,c,m,xi)\n",
        "  muestra.append([i,xi,nuevo/m])\n",
        "  xi = nuevo\n",
        "encabezados = [\"i\",\"x_i\",\"x_{i+1}\"]\n",
        "print(tabulate.tabulate(muestra,headers=encabezados))"
      ],
      "metadata": {
        "id": "znjj9MfIcUj6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "827e7d74-e406-4817-c608-356e0d0b6778"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  i    x_i    x_{i+1}\n",
            "---  -----  ---------\n",
            "  0      3  0.863636\n",
            "  1     19  0.318182\n",
            "  2      7  0.227273\n",
            "  3      5  0.0454545\n",
            "  4      1  0.681818\n",
            "  5     15  0.954545\n",
            "  6     21  0.5\n",
            "  7     11  0.590909\n",
            "  8     13  0.772727\n",
            "  9     17  0.136364\n",
            " 10      3  0.863636\n",
            " 11     19  0.318182\n",
            " 12      7  0.227273\n",
            " 13      5  0.0454545\n",
            " 14      1  0.681818\n",
            " 15     15  0.954545\n",
            " 16     21  0.5\n",
            " 17     11  0.590909\n",
            " 18     13  0.772727\n",
            " 19     17  0.136364\n",
            " 20      3  0.863636\n",
            " 21     19  0.318182\n",
            " 22      7  0.227273\n",
            " 23      5  0.0454545\n",
            " 24      1  0.681818\n",
            " 25     15  0.954545\n",
            " 26     21  0.5\n",
            " 27     11  0.590909\n",
            " 28     13  0.772727\n",
            " 29     17  0.136364\n",
            " 30      3  0.863636\n",
            " 31     19  0.318182\n",
            " 32      7  0.227273\n",
            " 33      5  0.0454545\n",
            " 34      1  0.681818\n",
            " 35     15  0.954545\n",
            " 36     21  0.5\n",
            " 37     11  0.590909\n",
            " 38     13  0.772727\n",
            " 39     17  0.136364\n",
            " 40      3  0.863636\n",
            " 41     19  0.318182\n",
            " 42      7  0.227273\n",
            " 43      5  0.0454545\n",
            " 44      1  0.681818\n",
            " 45     15  0.954545\n",
            " 46     21  0.5\n",
            " 47     11  0.590909\n",
            " 48     13  0.772727\n",
            " 49     17  0.136364\n"
          ]
        }
      ]
    }
  ]
}